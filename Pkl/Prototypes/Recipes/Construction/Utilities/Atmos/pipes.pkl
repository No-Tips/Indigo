amends ".../Typings.pkl"

import ".../Entities/Structures/Piping/Atmos/constants.pkl"

content {
    generateHalfConstruction(0)
    generateHalfConstruction(1)
    generateHalfConstruction(2)
    generateHalfConstruction(3)
    generateHalfConstruction(4)

    generateStraightConstruction(0)
    generateStraightConstruction(1)
    generateStraightConstruction(2)
    generateStraightConstruction(3)
    generateStraightConstruction(4)

    generateBendConstruction(0)
    generateBendConstruction(1)
    generateBendConstruction(2)
    generateBendConstruction(3)
    generateBendConstruction(4)

    generateTJunctionConstruction(0)
    generateTJunctionConstruction(1)
    generateTJunctionConstruction(2)
    generateTJunctionConstruction(3)
    generateTJunctionConstruction(4)

    generateFourwayConstruction(0)
    generateFourwayConstruction(1)
    generateFourwayConstruction(2)
    generateFourwayConstruction(3)
    generateFourwayConstruction(4)
}

local const function generateHalfConstruction(l: constants.PipeLayer): ConstructionPrototype = new {
    id = "GasPipeHalf\(l)"
    name = "gas pipe half, \(l)"
    description = "Half of a gas pipe. No skateboards."
    graph = "GasPipe"
    startNode = "start"
    targetNode = "half\(l)"
    category = "construction-category-utilities"
    placementMode = "SnapgridCenter"
    canBuildInImpassable = true
    icon = new Rsi {
        sprite = "/Textures/Structures/Piping/Atmospherics/pipe.rsi"
        state = "pipeHalf_\(l)"
    }
}

local const function generateStraightConstruction(l: constants.PipeLayer): ConstructionPrototype = new {
    id = "GasPipeStraight\(l)"
    name = "gas pipe straight, \(l)"
    description = "A straight pipe segment."
    graph = "GasPipe"
    startNode = "start"
    targetNode = "straight\(l)"
    category = "construction-category-utilities"
    placementMode = "SnapgridCenter"
    canBuildInImpassable = true
    icon = new Rsi {
        sprite = "/Textures/Structures/Piping/Atmospherics/pipe.rsi"
        state = "pipeStraight_\(l)"
    }
}

local const function generateBendConstruction(l: constants.PipeLayer): ConstructionPrototype = new {
    id = "GasPipeBend\(l)"
    name = "gas pipe bend, \(l)"
    description = "A pipe segment bent at a 90 degree angle"
    graph = "GasPipe"
    startNode = "start"
    targetNode = "bend\(l)"
    category = "construction-category-utilities"
    placementMode = "SnapgridCenter"
    canBuildInImpassable = true
    icon = new Rsi {
        sprite = "/Textures/Structures/Piping/Atmospherics/pipe.rsi"
        state = "pipeBend_\(l)"
    }
}

local const function generateTJunctionConstruction(l: constants.PipeLayer): ConstructionPrototype = new {
    id = "GasPipeTJunction\(l)"
    name = "gas pipe T junction, \(l)"
    description = "A pipe segment with a T junction."
    graph = "GasPipe"
    startNode = "start"
    targetNode = "tjunction\(l)"
    category = "construction-category-utilities"
    placementMode = "SnapgridCenter"
    canBuildInImpassable = true
    icon = new Rsi {
        sprite = "/Textures/Structures/Piping/Atmospherics/pipe.rsi"
        state = "pipeTJunction_\(l)"
    }
}

local const function generateFourwayConstruction(l: constants.PipeLayer): ConstructionPrototype = new {
    id = "GasPipeFourway\(l)"
    name = "gas pipe fourway"
    description = "A pipe segment with a fourway junction."
    graph = "GasPipe"
    startNode = "start"
    targetNode = "fourway\(l)"
    category = "construction-category-utilities"
    placementMode = "SnapgridCenter"
    canBuildInImpassable = true
    icon = new Rsi {
        sprite = "/Textures/Structures/Piping/Atmospherics/pipe.rsi"
        state = "pipeFourway_\(l)"
    }
}
