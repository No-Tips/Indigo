amends ".../Typings.pkl"

import "constants.pkl"

local typealias PipeLayer = constants.PipeLayer

content {
    generatePipeFourway(0)
    generatePipeFourway(1)
    generatePipeFourway(2)
    generatePipeFourway(3)
    generatePipeFourway(4)

    generatePipeStraight(0)
    generatePipeStraight(1)
    generatePipeStraight(2)
    generatePipeStraight(3)
    generatePipeStraight(4)

    generatePipeBend(0)
    generatePipeBend(1)
    generatePipeBend(2)
    generatePipeBend(3)
    generatePipeBend(4)

    generatePipeTJunction(0)
    generatePipeTJunction(1)
    generatePipeTJunction(2)
    generatePipeTJunction(3)
    generatePipeTJunction(4)

    generatePressurePump(0)
    generatePressurePump(1)
    generatePressurePump(2)
    generatePressurePump(3)
    generatePressurePump(4)

    generateVolumePump(0)
    generateVolumePump(1)
    generateVolumePump(2)
    generateVolumePump(3)
    generateVolumePump(4)

    generateValve(0)
    generateValve(1)
    generateValve(2)
    generateValve(3)
    generateValve(4)

    generateSignalControlledValve(0)
    generateSignalControlledValve(1)
    generateSignalControlledValve(2)
    generateSignalControlledValve(3)
    generateSignalControlledValve(4)

    generatePressureControlledValve(0)
    generatePressureControlledValve(1)
    generatePressureControlledValve(2)
    generatePressureControlledValve(3)
    generatePressureControlledValve(4)

    generateOutletInjector(0)
    generateOutletInjector(1)
    generateOutletInjector(2)
    generateOutletInjector(3)
    generateOutletInjector(4)

    generateVentScrubber(0)
    generateVentScrubber(1)
    generateVentScrubber(2)
    generateVentScrubber(3)
    generateVentScrubber(4)

    generateVentPump(0)
    generateVentPump(1)
    generateVentPump(2)
    generateVentPump(3)
    generateVentPump(4)

    generateDualPortVentPump(0)
    generateDualPortVentPump(1)
    generateDualPortVentPump(2)
    generateDualPortVentPump(3)
    generateDualPortVentPump(4)

    generatePassiveVent(0)
    generatePassiveVent(1)
    generatePassiveVent(2)
    generatePassiveVent(3)
    generatePassiveVent(4)

    new RCDPrototype {
        id = "Radiator"
        category = "AtmosphericUtility"
        sprite = "/Textures/Interface/Radial/RPD/radiator.png"
        mode = "ConstructObject"
        prototype = "HeatExchanger"
        cost = 1
        delay = 0.0
        collisionMask = "Impassable"
        rotation = "User"
        fx = "EffectRCDConstruct0"
    }

    generateMixer(0)
    generateMixer(1)
    generateMixer(2)
    generateMixer(3)
    generateMixer(4)

    generateFilter(0)
    generateFilter(1)
    generateFilter(2)
    generateFilter(3)
    generateFilter(4)

    generatePort(0)
    generatePort(1)
    generatePort(2)
    generatePort(3)
    generatePort(4)
}

local const function generatePipeFourway(l: PipeLayer): RCDPrototype = new {
    id = "PiepFourway\(l)"
    category = "Piping"
    sprite = "/Textures/Interface/Radial/RPD/fourway.png"
    mode = "ConstructObject"
    prototype = "GasPipeFourway\(l)"
    cost = 1
    delay = 0.0
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generatePipeStraight(l: PipeLayer): RCDPrototype = new {
    id = "PipeStraight\(l)"
    category = "Piping"
    sprite = "/Textures/Interface/Radial/RPD/straight.png"
    mode = "ConstructObject"
    prototype = "GasPipeStraight\(l)"
    cost = 1
    delay = 0.0
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generatePipeBend(l: PipeLayer): RCDPrototype = new {
    id = "PipeBend\(l)"
    category = "Piping"
    sprite = "/Textures/Interface/Radial/RPD/bend.png"
    mode = "ConstructObject"
    prototype = "GasPipeBend\(l)"
    cost = 1
    delay = 0.0
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generatePipeTJunction(l: PipeLayer): RCDPrototype = new {
    id = "PipeTJunction\(l)"
    category = "Piping"
    sprite = "/Textures/Interface/Radial/RPD/tjunction.png"
    mode = "ConstructObject"
    prototype = "GasPipeTJunction\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generatePressurePump(l: PipeLayer): RCDPrototype = new {
    id = "PressurePump\(l)"
    category = "PumpsValves"
    sprite = "/Textures/Interface/Radial/RPD/pump_pressure.png"
    mode = "ConstructObject"
    prototype = "GasPressurePump\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateVolumePump(l: PipeLayer): RCDPrototype = new {
    id = "VolumePump\(l)"
    category = "PumpsValves"
    sprite = "/Textures/Interface/Radial/RPD/pump_volume.png"
    mode = "ConstructObject"
    prototype = "GasVolumePump\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateValve(l: PipeLayer): RCDPrototype = new {
    id = "Valve\(l)"
    category = "PumpsValves"
    sprite = "/Textures/Interface/Radial/RPD/pump_manual_valve.png"
    mode = "ConstructObject"
    prototype = "GasValve\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateSignalControlledValve(l: PipeLayer): RCDPrototype = new {
    id = "SignalValve\(l)"
    category = "PumpsValves"
    sprite = "/Textures/Interface/Radial/RPD/pump_signal_valve.png"
    mode = "ConstructObject"
    prototype = "SignalControlledValve\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generatePressureControlledValve(l: PipeLayer): RCDPrototype = new {
    id = "PressureValve\(l)"
    category = "PumpsValves"
    sprite = "/Textures/Interface/Radial/RPD/pneumatic_valve.png"
    mode = "ConstructObject"
    prototype = "PressureControlledValve\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateOutletInjector(l: PipeLayer): RCDPrototype = new {
    id = "OutletInjector\(l)"
    category = "Vents"
    sprite = "/Textures/Interface/Radial/RPD/injector.png"
    mode = "ConstructObject"
    prototype = "GasOutletInjector\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateVentScrubber(l: PipeLayer): RCDPrototype = new {
    id = "VentScrubber\(l)"
    category = "Vents"
    sprite = "/Textures/Interface/Radial/RPD/scrub_off.png"
    mode = "ConstructObject"
    prototype = "GasVentScrubber\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateVentPump(l: PipeLayer): RCDPrototype = new {
    id = "VentGas\(l)"
    category = "Vents"
    sprite = "/Textures/Interface/Radial/RPD/vent_off.png"
    mode = "ConstructObject"
    prototype = "GasVentPump\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateDualPortVentPump(l: PipeLayer): RCDPrototype = new {
    id = "DualPortVent\(l)"
    category = "Vents"
    sprite = "/Textures/Interface/Radial/RPD/dual_port.png"
    mode = "ConstructObject"
    prototype = "GasDualPortVentPump\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generatePassiveVent(l: PipeLayer): RCDPrototype = new {
    id = "VentPassive\(l)"
    category = "Vents"
    sprite = "/Textures/Interface/Radial/RPD/vent_passive.png"
    mode = "ConstructObject"
    prototype = "GasPassiveVent\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateMixer(l: PipeLayer): RCDPrototype = new {
    id = "MixerGas\(l)"
    category = "AtmosphericUtility"
    sprite = "/Textures/Interface/Radial/RPD/gas_mixer.png"
    mode = "ConstructObject"
    prototype = "GasMixer\(l)"
    mirrorPrototype = "GasMixerFlipped\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generateFilter(l: PipeLayer): RCDPrototype = new {
    id = "FilterGas\(l)"
    category = "AtmosphericUtility"
    sprite = "/Textures/Interface/Radial/RPD/gas_filter.png"
    mode = "ConstructObject"
    prototype = "GasFilter\(l)"
    mirrorPrototype = "GasFilterFlipped\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}

local const function generatePort(l: PipeLayer): RCDPrototype = new {
    id = "CanisterPort\(l)"
    category = "AtmosphericUtility"
    sprite = "/Textures/Interface/Radial/RPD/port.png"
    mode = "ConstructObject"
    prototype = "GasPort\(l)"
    cost = 1
    delay = 0.0
    collisionMask = "Impassable"
    rotation = "User"
    fx = "EffectRCDConstruct0"
}
