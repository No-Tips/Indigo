// Copyright (C) 2025 Igor Spichkin

// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.

// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

using Content.Shared.InterfaceGuidelines;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;


namespace Content.Client.UserInterface.Controls;


[GenerateTypedNameReferences, Virtual,]
public partial class FancyCheckBox : ContainerButton
{
    /// <summary>
    ///     The text displayed by the button.
    /// </summary>
    [ViewVariables]
    public string? Text { get => Title.Text; set => Title.Text = value; }

    private readonly bool _inited;

    public FancyCheckBox()
    {
        RobustXamlLoader.Load(this);

        ToggleMode = true;
        _inited    = true;

        UpdateAppearance();
    }

    protected override void DrawModeChanged()
    {
        base.DrawModeChanged();

        if (!_inited)
            return;

        UpdateAppearance();
    }

    private void UpdateAppearance()
    {
        GlyphIcon.Text = Pressed ? SymbolIcons.Check : "";
        IconPanel.SetOnlyStyleClass(
            Pressed ? UIStyleClasses.FancyCheckBoxCheckedPanel : UIStyleClasses.FancyCheckBoxPanel);
    }
}
