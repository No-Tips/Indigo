using System.Numerics;
using Content.Client.InterfaceGuidelines;
using Content.Shared.InterfaceGuidelines;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Mapping;

[GenerateTypedNameReferences]
public sealed partial class MappingSpawnButton : Control
{
    [Dependency] private readonly TypographyManager _typographyManager = null!;

    private MappingPrototype? _prototype;

    public MappingPrototype? Prototype
    {
        get => _prototype;
        set
        {
            _prototype = value;
            if (_prototype != null)
                ToggleFavorite(_prototype.Favorite);
        }
    }

    public MappingSpawnButton()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        var font = _typographyManager.GetSymbolsFont(
            filled: true,
            style: TextStyle.Title2,
            weight: FontWeight.SemiBold
        );

        CollapseButtonIcon.Text         =  SymbolIcons.ExpandAll;
        CollapseButtonIcon.FontOverride =  font;
        FavoriteButtonIcon.Text         =  SymbolIcons.Favourite;
        FavoriteButtonIcon.FontOverride =  font;
        FavoriteButton.OnPressed        += args => ToggleFavorite(args.Button.Pressed);

        OnResized += OnResizedGallery;
    }

    private void OnResizedGallery()
    {
        if (Parent != null)
            ChildrenPrototypesGallery.MaxGridWidth = Math.Max(1, Parent.Width - ChildrenPrototypesGallery.Margin.Left );
    }

    public void Gallery()
    {
        Label.Visible = false;
        Button.AddStyleClass("ButtonSquare");
        SetWidth = 48;
        SetHeight = 48;
        // TODO: I don't know how to successfully add a favorite button to the gallery layout
        FavoriteButton.Visible = false;
    }

    public void SetTextures(List<Texture> textures)
    {
        Button.RemoveStyleClass("OpenBoth");
        Button.AddStyleClass("OpenLeft");
        CollapseButton.RemoveStyleClass("OpenRight");
        CollapseButton.AddStyleClass("ButtonSquare");
        Texture.Visible = true;
        Texture.Textures.AddRange(textures);

        foreach (var texture in textures)
        {
            Texture.TextureScale = new Vector2(Texture.SetSize.X / texture.Height, Texture.SetSize.X / texture.Height);
        }

        Texture.InvalidateMeasure();
    }

    public void Collapse()
    {
        CollapseButton.Pressed = false;
        ChildrenPrototypes.DisposeAllChildren();
        ChildrenPrototypesGallery.DisposeAllChildren();
        CollapseButtonIcon.Text = SymbolIcons.ExpandAll;
    }

    public void UnCollapse()
    {
        CollapseButton.Pressed  = true;
        CollapseButtonIcon.Text = SymbolIcons.CollapseAll;
    }

    public void ToggleFavorite(bool enabled)
    {
        FavoriteButton.Pressed               = enabled;
        FavoriteButtonIcon.FontColorOverride = FavoriteButton.Pressed ? Color.FromHex("EEBE00") : null;
    }
}
